name: Run Jenkins Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-jenkins:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run Jenkins Pipeline
        run: |
          docker run --rm \
            -u root \
            -v $(pwd):/workspace \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -w /workspace \
            jenkins/jenkins:lts-jdk11 \
            bash -c "apt-get update && \
                    apt-get install -y python3 python3-pip python3-venv curl jq && \
                    python3 -m venv /workspace/venv && \
                    . /workspace/venv/bin/activate && \
                    pip install pytest && \
                    export JENKINS_OPTS='-Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true' && \
                    java -jar /usr/share/jenkins/jenkins.war --httpPort=8080 \$JENKINS_OPTS & \
                    echo 'Waiting for Jenkins to start...' && \
                    while ! curl -s http://localhost:8080 > /dev/null; do sleep 1; done && \
                    echo 'Jenkins is up!' && \
                    sleep 30 && \
                    JENKINS_PASSWORD=\$(cat /var/jenkins_home/secrets/initialAdminPassword) && \
                    echo 'Creating API token...' && \
                    API_TOKEN=\$(curl -X POST --user admin:\$JENKINS_PASSWORD http://localhost:8080/user/admin/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken \
                    --data-urlencode 'newTokenName=github-actions' \
                    -H 'Content-Type: application/x-www-form-urlencoded' | jq -r '.data.tokenValue') && \
                    echo 'Creating Jenkins job...' && \
                    curl -X POST http://localhost:8080/createItem?name=dockerfile-generator \
                    --user admin:\$API_TOKEN \
                    --data-binary @/workspace/Jenkinsfile \
                    -H 'Content-Type: application/xml' && \
                    echo 'Triggering Jenkins job...' && \
                    curl -X POST http://localhost:8080/job/dockerfile-generator/build \
                    --user admin:\$API_TOKEN && \
                    echo 'Waiting for job completion...' && \
                    sleep 30 && \
                    curl -s http://localhost:8080/job/dockerfile-generator/lastBuild/consoleText \
                    --user admin:\$API_TOKEN" 